[tox]
envlist = flake8, mypy, tests, tests-py37, tests-py38, tests-py39, docs, docs-latex, docs-linkcheck

[testenv]
basepython = python3.6

[testenv:flake8]
description = Enforce style guidelines.
skip_install = True
deps = flake8
commands = flake8

[testenv:mypy]
description = Check types.
skip_install = True
deps = mypy
commands = mypy .

[testenv:tests]
description = Run the test suite.
extras = tests
commands = pytest -x -r s -n {posargs:3}

[testenv:tests-py37]
description = Run the test suite with Python 3.7.
basepython = python3.7
extras = {[testenv:tests]extras}
commands = {[testenv:tests]commands}

[testenv:tests-py38]
description = Run the test suite with Python 3.8.
basepython = python3.8
extras = {[testenv:tests]extras}
commands = {[testenv:tests]commands}

[testenv:tests-py39]
description = Run the test suite with Python 3.9.
basepython = python3.9
extras = {[testenv:tests]extras}
commands = {[testenv:tests]commands}

[testenv:docs]
description = Build the documentation.
extras = docs
changedir = docs
commands = sphinx-build -E -d _build/html-doctrees -b html . _build/html

[testenv:docs-latex]
description = Build a LaTeX version of the documentation.
extras = {[testenv:docs]extras}
changedir = {[testenv:docs]changedir}
whitelist_externals =
    pdflatex
    makeindex
commands =
    sphinx-build -E -d _build/latex-doctrees -b latex . _build/latex
    pdflatex -quiet -halt-on-error -interaction=nonstopmode -include-directory=_build/latex -output-directory=_build/latex _build/latex/pyhdfe.tex
    makeindex -s _build/latex/python.ist -o _build/latex/pyhdfe.ind _build/latex/pyhdfe.idx
    pdflatex -quiet -halt-on-error -interaction=nonstopmode -include-directory=_build/latex -output-directory=_build/latex _build/latex/pyhdfe.tex

[testenv:docs-linkcheck]
description = Test external links in the documentation.
extras = {[testenv:docs]extras}
changedir = {[testenv:docs]changedir}
commands = sphinx-build -E -W -d _build/linkcheck-doctrees -b linkcheck . _build/linkcheck

[testenv:build]
description = Check the description, clean build files, create a source distribution, and create a wheel.
skip_install = True
deps =
    wheel
    setuptools
    readme_renderer
commands = python setup.py check -r -s clean -a sdist bdist_wheel

[testenv:release]
description = Run the build commands and upload the source distribution and wheel to PyPI.
skip_install = True
deps =
    twine
    {[testenv:build]deps}
commands =
    {[testenv:build]commands}
    twine upload --skip-existing dist/*

[testenv:release-test]
description = Run the build commands and upload the source distribution and wheel to the test instance of PyPI.
skip_install = True
deps =
    twine
    {[testenv:build]deps}
commands =
    {[testenv:build]commands}
    twine upload --skip-existing --repository-url https://test.pypi.org/legacy/ dist/*
